/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace MQCloud {

using System;
using System.Runtime.InteropServices;

class MQCloudPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("MQCloud", EntryPoint="SWIGRegisterExceptionCallbacks_MQCloud")]
    public static extern void SWIGRegisterExceptionCallbacks_MQCloud(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("MQCloud", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_MQCloud")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_MQCloud(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_MQCloud(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_MQCloud(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(MQCloudPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(MQCloudPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("MQCloud", EntryPoint="SWIGRegisterStringCallback_MQCloud")]
    public static extern void SWIGRegisterStringCallback_MQCloud(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_MQCloud(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static MQCloudPINVOKE() {
  }


  [DllImport("MQCloud", EntryPoint="CSharp_CString_data_set")]
  public static extern void CString_data_set(HandleRef jarg1, string jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CString_data_get")]
  public static extern string CString_data_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CString_length_set")]
  public static extern void CString_length_set(HandleRef jarg1, int jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CString_length_get")]
  public static extern int CString_length_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_CString")]
  public static extern IntPtr new_CString();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_CString")]
  public static extern void delete_CString(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_NewCString")]
  public static extern IntPtr NewCString(string jarg1, int jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_FreeCString")]
  public static extern void FreeCString(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_messaageId_set")]
  public static extern void Message_messaageId_set(HandleRef jarg1, int jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_messaageId_get")]
  public static extern int Message_messaageId_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_topic_set")]
  public static extern void Message_topic_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_topic_get")]
  public static extern IntPtr Message_topic_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_data_set")]
  public static extern void Message_data_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_data_get")]
  public static extern IntPtr Message_data_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_serviceId_set")]
  public static extern void Message_serviceId_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_Message_serviceId_get")]
  public static extern IntPtr Message_serviceId_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_Message")]
  public static extern IntPtr new_Message();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_Message")]
  public static extern void delete_Message(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreMessage_Message_set")]
  public static extern void CoreMessage_Message_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreMessage_Message_get")]
  public static extern IntPtr CoreMessage_Message_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreMessage_PatternName_set")]
  public static extern void CoreMessage_PatternName_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreMessage_PatternName_get")]
  public static extern IntPtr CoreMessage_PatternName_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreMessage_PatternData_set")]
  public static extern void CoreMessage_PatternData_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreMessage_PatternData_get")]
  public static extern IntPtr CoreMessage_PatternData_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_CoreMessage")]
  public static extern IntPtr new_CoreMessage();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_CoreMessage")]
  public static extern void delete_CoreMessage(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CoreCreatePublishingSocket_set")]
  public static extern void CorePublishingSocketInterface_CoreCreatePublishingSocket_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CoreCreatePublishingSocket_get")]
  public static extern IntPtr CorePublishingSocketInterface_CoreCreatePublishingSocket_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CoreBindPublishingSocket_set")]
  public static extern void CorePublishingSocketInterface_CoreBindPublishingSocket_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CoreBindPublishingSocket_get")]
  public static extern IntPtr CorePublishingSocketInterface_CoreBindPublishingSocket_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CorePublishMessage_set")]
  public static extern void CorePublishingSocketInterface_CorePublishMessage_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CorePublishMessage_get")]
  public static extern IntPtr CorePublishingSocketInterface_CorePublishMessage_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CoreDeletePublishingSocket_set")]
  public static extern void CorePublishingSocketInterface_CoreDeletePublishingSocket_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CorePublishingSocketInterface_CoreDeletePublishingSocket_get")]
  public static extern IntPtr CorePublishingSocketInterface_CoreDeletePublishingSocket_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_CorePublishingSocketInterface")]
  public static extern IntPtr new_CorePublishingSocketInterface();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_CorePublishingSocketInterface")]
  public static extern void delete_CorePublishingSocketInterface(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreSubscriberSocketInterface_CoreCreateSubscribingSocket_set")]
  public static extern void CoreSubscriberSocketInterface_CoreCreateSubscribingSocket_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreSubscriberSocketInterface_CoreCreateSubscribingSocket_get")]
  public static extern IntPtr CoreSubscriberSocketInterface_CoreCreateSubscribingSocket_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreSubscriberSocketInterface_CoreConnectSubscribingSocket_set")]
  public static extern void CoreSubscriberSocketInterface_CoreConnectSubscribingSocket_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreSubscriberSocketInterface_CoreConnectSubscribingSocket_get")]
  public static extern IntPtr CoreSubscriberSocketInterface_CoreConnectSubscribingSocket_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreSubscriberSocketInterface_CoreDeleteSubscribingSocket_set")]
  public static extern void CoreSubscriberSocketInterface_CoreDeleteSubscribingSocket_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreSubscriberSocketInterface_CoreDeleteSubscribingSocket_get")]
  public static extern IntPtr CoreSubscriberSocketInterface_CoreDeleteSubscribingSocket_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_CoreSubscriberSocketInterface")]
  public static extern IntPtr new_CoreSubscriberSocketInterface();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_CoreSubscriberSocketInterface")]
  public static extern void delete_CoreSubscriberSocketInterface(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_CoreGetAllowedThreadPoolMaxSize_set")]
  public static extern void CoreThreadManagementInterface_CoreGetAllowedThreadPoolMaxSize_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_CoreGetAllowedThreadPoolMaxSize_get")]
  public static extern IntPtr CoreThreadManagementInterface_CoreGetAllowedThreadPoolMaxSize_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_CoreCreateThread_set")]
  public static extern void CoreThreadManagementInterface_CoreCreateThread_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_CoreCreateThread_get")]
  public static extern IntPtr CoreThreadManagementInterface_CoreCreateThread_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_CoreDeleteThread_set")]
  public static extern void CoreThreadManagementInterface_CoreDeleteThread_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_CoreDeleteThread_get")]
  public static extern IntPtr CoreThreadManagementInterface_CoreDeleteThread_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_AddTask_set")]
  public static extern void CoreThreadManagementInterface_AddTask_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreThreadManagementInterface_AddTask_get")]
  public static extern IntPtr CoreThreadManagementInterface_AddTask_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_CoreThreadManagementInterface")]
  public static extern IntPtr new_CoreThreadManagementInterface();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_CoreThreadManagementInterface")]
  public static extern void delete_CoreThreadManagementInterface(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreConfiguration_ThreadingInterface_set")]
  public static extern void CoreConfiguration_ThreadingInterface_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreConfiguration_ThreadingInterface_get")]
  public static extern IntPtr CoreConfiguration_ThreadingInterface_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreConfiguration_SubscriberSocketInterface_set")]
  public static extern void CoreConfiguration_SubscriberSocketInterface_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreConfiguration_SubscriberSocketInterface_get")]
  public static extern IntPtr CoreConfiguration_SubscriberSocketInterface_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreConfiguration_PublishingSocketInterface_set")]
  public static extern void CoreConfiguration_PublishingSocketInterface_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_CoreConfiguration_PublishingSocketInterface_get")]
  public static extern IntPtr CoreConfiguration_PublishingSocketInterface_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_CoreConfiguration")]
  public static extern IntPtr new_CoreConfiguration();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_CoreConfiguration")]
  public static extern void delete_CoreConfiguration(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_NewMessage")]
  public static extern IntPtr NewMessage(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_FreeMessage")]
  public static extern void FreeMessage(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_GetSenderId")]
  public static extern IntPtr GetSenderId(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnSendError_set")]
  public static extern void EventsHandler_OnSendError_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnSendError_get")]
  public static extern IntPtr EventsHandler_OnSendError_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnReadError_set")]
  public static extern void EventsHandler_OnReadError_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnReadError_get")]
  public static extern IntPtr EventsHandler_OnReadError_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnExchangeError_set")]
  public static extern void EventsHandler_OnExchangeError_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnExchangeError_get")]
  public static extern IntPtr EventsHandler_OnExchangeError_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnConnectedToExchange_set")]
  public static extern void EventsHandler_OnConnectedToExchange_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnConnectedToExchange_get")]
  public static extern IntPtr EventsHandler_OnConnectedToExchange_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnServiceRegistred_set")]
  public static extern void EventsHandler_OnServiceRegistred_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnServiceRegistred_get")]
  public static extern IntPtr EventsHandler_OnServiceRegistred_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnNewSubscriber_set")]
  public static extern void EventsHandler_OnNewSubscriber_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_EventsHandler_OnNewSubscriber_get")]
  public static extern IntPtr EventsHandler_OnNewSubscriber_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_EventsHandler")]
  public static extern IntPtr new_EventsHandler();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_EventsHandler")]
  public static extern void delete_EventsHandler(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_CreateContext")]
  public static extern IntPtr CreateContext();

  [DllImport("MQCloud", EntryPoint="CSharp_SetEventsHandler")]
  public static extern void SetEventsHandler(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_SetServiceName")]
  public static extern void SetServiceName(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_SetExchengeAdress")]
  public static extern void SetExchengeAdress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_Request")]
  public static extern void Request(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_RequestTarget")]
  public static extern void RequestTarget(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("MQCloud", EntryPoint="CSharp_AdvertizeReplysOnTopic")]
  public static extern void AdvertizeReplysOnTopic(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_AdvertizePublishingOnTopic")]
  public static extern void AdvertizePublishingOnTopic(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_PublishMessage")]
  public static extern void PublishMessage(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_Subscribe")]
  public static extern void Subscribe(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_RequestMany")]
  public static extern void RequestMany(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("MQCloud", EntryPoint="CSharp_ExtensiabiletyEventsHandler_OnNodeConnectedToOther_set")]
  public static extern void ExtensiabiletyEventsHandler_OnNodeConnectedToOther_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_ExtensiabiletyEventsHandler_OnNodeConnectedToOther_get")]
  public static extern IntPtr ExtensiabiletyEventsHandler_OnNodeConnectedToOther_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_ExtensiabiletyEventsHandler_OnNodeConnectedToThis_set")]
  public static extern void ExtensiabiletyEventsHandler_OnNodeConnectedToThis_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_ExtensiabiletyEventsHandler_OnNodeConnectedToThis_get")]
  public static extern IntPtr ExtensiabiletyEventsHandler_OnNodeConnectedToThis_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_ExtensiabiletyEventsHandler_OnMessage_set")]
  public static extern void ExtensiabiletyEventsHandler_OnMessage_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_ExtensiabiletyEventsHandler_OnMessage_get")]
  public static extern IntPtr ExtensiabiletyEventsHandler_OnMessage_get(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_new_ExtensiabiletyEventsHandler")]
  public static extern IntPtr new_ExtensiabiletyEventsHandler();

  [DllImport("MQCloud", EntryPoint="CSharp_delete_ExtensiabiletyEventsHandler")]
  public static extern void delete_ExtensiabiletyEventsHandler(HandleRef jarg1);

  [DllImport("MQCloud", EntryPoint="CSharp_AddExtensiabiletyEventsHandler")]
  public static extern int AddExtensiabiletyEventsHandler(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_RemoveExtensiabiletyEventsHandler")]
  public static extern void RemoveExtensiabiletyEventsHandler(HandleRef jarg1, int jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_AdvertiseTopic")]
  public static extern void AdvertiseTopic(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_SubscribeToTopic")]
  public static extern void SubscribeToTopic(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("MQCloud", EntryPoint="CSharp_PublishMessageToAnyNode")]
  public static extern void PublishMessageToAnyNode(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_PublishMessageToNode")]
  public static extern void PublishMessageToNode(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_PublishMessageToNodes")]
  public static extern void PublishMessageToNodes(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("MQCloud", EntryPoint="CSharp_GetAllSubscribedNodes")]
  public static extern void GetAllSubscribedNodes(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_GetAllPublishingNodes")]
  public static extern void GetAllPublishingNodes(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("MQCloud", EntryPoint="CSharp_SetGeneralNodeIdSelectionAlgorithm")]
  public static extern int SetGeneralNodeIdSelectionAlgorithm(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MQCloud", EntryPoint="CSharp_SetTopicNodeIdSelectionAlgorithm")]
  public static extern int SetTopicNodeIdSelectionAlgorithm(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
}

}

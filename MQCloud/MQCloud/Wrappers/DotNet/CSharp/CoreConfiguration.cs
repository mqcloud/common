/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace MQCloud {

using System;
using System.Runtime.InteropServices;

public class CoreConfiguration : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CoreConfiguration(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CoreConfiguration obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CoreConfiguration() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          MQCloudPINVOKE.delete_CoreConfiguration(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public CoreThreadManagementInterface ThreadingInterface {
    set {
      MQCloudPINVOKE.CoreConfiguration_ThreadingInterface_set(swigCPtr, CoreThreadManagementInterface.getCPtr(value));
    } 
    get {
      IntPtr cPtr = MQCloudPINVOKE.CoreConfiguration_ThreadingInterface_get(swigCPtr);
      CoreThreadManagementInterface ret = (cPtr == IntPtr.Zero) ? null : new CoreThreadManagementInterface(cPtr, false);
      return ret;
    } 
  }

  public CoreSubscriberSocketInterface SubscriberSocketInterface {
    set {
      MQCloudPINVOKE.CoreConfiguration_SubscriberSocketInterface_set(swigCPtr, CoreSubscriberSocketInterface.getCPtr(value));
    } 
    get {
      IntPtr cPtr = MQCloudPINVOKE.CoreConfiguration_SubscriberSocketInterface_get(swigCPtr);
      CoreSubscriberSocketInterface ret = (cPtr == IntPtr.Zero) ? null : new CoreSubscriberSocketInterface(cPtr, false);
      return ret;
    } 
  }

  public CorePublishingSocketInterface PublishingSocketInterface {
    set {
      MQCloudPINVOKE.CoreConfiguration_PublishingSocketInterface_set(swigCPtr, CorePublishingSocketInterface.getCPtr(value));
    } 
    get {
      IntPtr cPtr = MQCloudPINVOKE.CoreConfiguration_PublishingSocketInterface_get(swigCPtr);
      CorePublishingSocketInterface ret = (cPtr == IntPtr.Zero) ? null : new CorePublishingSocketInterface(cPtr, false);
      return ret;
    } 
  }

  public CoreConfiguration() : this(MQCloudPINVOKE.new_CoreConfiguration(), true) {
  }

}

}
